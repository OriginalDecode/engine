cbuffer Spotlight : register( b0 )
{
	float4 color;
	float4 eye_pos;
	float4 light_pos;
};

struct gsOut
{
    float4 m_Position : SV_POSITION;
    float m_InterpolDist : DISTANCE;
	float range : RANGE;
	float cosAngle : ANGLE;
	float4 normal : NORMAL;
	float4 direction : DIRECTION;
};


float4 main(gsOut input) : SV_Target
{
    float4 output = float4(0, 0, 0, 0);
	float4 lighToEye = normalize(eye_pos - light_pos);
	float lightToSurfaceAngle = dot(lighToEye, input.direction); //wait what

	float v0 = pow(input.m_InterpolDist, 3);
	float v1 = lerp(0.f,1.f,8.f);
	output += float4(color.rgb, 1) * v0 ;//* pow(lightToSurfaceAngle, 10);

    return saturate(output);
};

